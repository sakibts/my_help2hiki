# -*- coding: utf-8 -*-
---
:head:
- hikiutil関連のヘルプ
:initialize:
  :opts:
    :short: "-i"
    :long: "--initialize"
    :desc: hikiで卒論を書くときの初期化と掟
  :title: hikiで卒論を書くときの初期化と掟
  :cont:
  - 開発メモ:figs,dataも作成
  - 目的：西谷が後で迷わないように決まったファイル構造を堅持すべし
  - 文書：hikiで書く.のちには，latexに変換するプログラムを提供します
  - 図表：すべての図表をkeynoteにまとめる，タイトルを分かりやすく書く
  - データ：dataディレクトリにまとめる．ファイル名をkeynoteの対応する図表中に記す
  - hiki --initializeで初期ファイル(Rakefile, ./.hikirc, hiki_help.yml)がcopyされる
  - hiki_help.ymlを適宜~/.my_helpにcopyしてhiki_helpとして利用，(my_help参照)
  - Errno::EACCESやpermission errorがでたときはrake chenvを試してみる（報告して）
  - rake syncによってhikiディレクトリーと同期が取られる
  - hiki -u TARGETによってブラウザー表示される
  - テキストの拡張子は'.hiki'
  - hikiでのurlはテキスト前とディレクトリーから自動生成される
  - 例えば，hiki2latex_saki/introduciton.hikiとするとhiki2latex_saki_introducitonと変換される
:error:
  :opts:
    :short: "-e"
    :long: "--error"
    :desc: error対応
  :title: error対応
  :cont:
  - Permission denied - ./data/text/boundary_narita (Errno::EACCES)->テキストにhikiが書き込めない，chmod
    a+w FILE
:figs:
  :opts:
    :short: "-f"
    :long: "--figs"
    :desc: 図表：すべての図表をkeynoteにまとめる，タイトルを分かりやすく書く
  :title: 図表：すべての図表をkeynoteにまとめる，タイトルを分かりやすく書く
  :cont:
  - keynoteに書いたスライドはイメージに書き出して，rake convert 80 TARGET_DIRでfigsに変換
  - rake syncでfigsにあるfilesはhiki/target_dirにcpされる
  - 'convert #{source} -resize 20% #{target}によって，target=figs/TAERGET.pngに20%に縮小して保存される'
  - convert -density 300 view.svg view.pngで300dpiで変換
  - |
    attach_anchorでは
    '{{attach_anchor(test.png, hiki2latex_saki)}}'
    と，directory指定しなければならない.
  - keynoteであとで図を挿入して番号が変わった時の原稿の一括変換 
  - rake increment 2 boundary_bob.hiki boundary_bob > tmp.hiki
  - rake convert 60 boundary_bob
  - rake sync
  - hiki -u boundary_bob_tmp
